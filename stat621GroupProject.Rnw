\documentclass[twocolumn]{article}
\usepackage[left=1cm, right=1cm, top=2cm, bottom=2cm]{geometry}

% Packages
\usepackage{graphicx}
\usepackage{color}
\usepackage{amsmath}
\usepackage{enumerate}
\usepackage{multicol}
\usepackage{amsthm}
\usepackage[extreme]{savetrees}
\usepackage[none]{hyphenat}

% Title
\begin{document}
\onecolumn
\title{Stat 621 - Time Series Analysis - Group Project}
\author{Benjamin Hulet}
\maketitle

\section*{MODEL SELECTION AND FORECASTING}

<<message = FALSE, fig.align='center', fig.width=7, fig.height=3, echo = FALSE, warning=FALSE>>=
library(xts)
library(gsubfn)
library(quantmod)
library(xtsPlots)
library(forecast)
library(MASS)
library(TTR)
library(tseries)
library(fBasics)
library(zoo)

## reading in the data and formatting
data<-read.csv('monthly-lake-erie-levels-1921-19.csv',header=TRUE,stringsAsFactors=FALSE)
data<-na.omit(data)
data[,1]<-as.yearmon(data[,1])
data<-xts(data[,-1], order.by=data[,1])

## splitting the data into parts
first <- data[1:360,]
second <- data[361:480,]
third <- data[481:600,]

## plotting the ACF and PACF
par(mfrow=c(1,2))
acf(data)
pacf(data)
par(mfrow=c(1,1))


## intial plot of the entire series
plot(data,main="Monthly Lake Erie Levels 1921-1970",ylab="Water level above LWD in inches")
plot(first,main="first",ylab="Water Level in inches")
plot(second,main="second Lake Erie Levels 1921-1970",ylab="Water Level in inches")
plot(third,main="third",ylab="Water Level in inches")


@

<<fig.align='center', fig.height=4, fig.width=7>>=
### initially vectors for big loop
firstX<-as.ts(first);
secondX<-as.ts(second);
thirdX<-as.ts(third)
numberOfFreq <- 4; maxP <- 3; maxD <- 2; maxQ <- 3;
predTable <- as.data.frame(matrix(nrow=length(secondX), ncol = numberOfFreq*maxP*maxD*maxQ))
propor <- as.data.frame(matrix(nrow = length(secondX), ncol = numberOfFreq))
colnames(propor) <- c("F1", "F2", "F3", "F4")
k <- 0

## creating colnames for prediction table
for (j in 1:numberOfFreq){
  for (p in 0:{maxP - 1}){
    for (d in 0:{maxD - 1}){
      for (q in 0:{maxQ-1}){
      k <- k+1
      colnames(predTable)[k] <- paste("a(", p, d, q,")", "F =", j)
      }
    }
  }
}
k <- 0
############################################
## Big Training loop 
###The output would be one prediction table and one proportion table
for(i in 1:length(secondX))
{
  if(i==1)# get the original 60% of the observations
  {
    series<-firstX
  }else{# add new observations
    series<-c(firstX,secondX[1:(i-1)])
  }
  Ts<-length(series)
  I<-abs(fft(series))^2/Ts
  if(Ts%%2==0)#if n is even
  {
    f<-1:(Ts/2-1)/Ts
    P<-(4/Ts)*I[2:(Ts/2)]
  }else{#if n is odd
    f<-1:{(Ts-1)/2}/Ts
    P<-(4/Ts)*I[2:{(Ts+1)/2}]
  }
  varseries<-var(series)*(1-1/Ts)
  k <- 0
  for(j in 1:numberOfFreq)
  {
    freq <- f[order(P, decreasing = TRUE)[1:j]]
    regMatrix <- matrix(ncol = length(freq)*2, nrow = Ts+1)
    for (l in 1:j)
    {
      regMatrix[,{2*l}-1] <-cos(2*pi* {1:(Ts+1)}*freq[l])
      regMatrix[,2*l] <-sin(2*pi * {1:(Ts+1)}*freq[l])
    }
    reg <- lm(series~regMatrix[-(Ts+1),]) 
    specPred<-sum(reg$coefficients*c(1,regMatrix[Ts+1,]))
    propor[i,j] <-0.5*sum(reg$coefficients[-1]^2)/varseries
    ############## FIT ARIMA Model ################
    for (p in 0:{maxP - 1}){
      for (d in 0:{maxD - 1}){
        for (q in 0:{maxQ-1}){
          k <- k+1
          tempModel <- arima(x = reg$residuals, c(p,d,q))
          predTable[i,k] <- specPred+forecast.Arima(tempModel,h=1)$mean
        }
      }
    }
  }
}
########################Select the best model based on MSE
MSE<-numeric(dim(predTable)[2])
names(MSE)<-colnames(predTable)
for(i in 1:length(MSE))
{
  MSE[i]<-mean(sum((predTable[,i]-secondX)^2))
}
names(MSE)[which.min(MSE)]
##########################Assessment
plot(coredata(secondX))
lines(predTable[,which.min(MSE)])


#########################################################################
## Assessment loop 
###The output would be one prediction table and one proportion table

### initially vectors for big loop
Freq <- numberOfFreq <- j <- 2; P <- 2; D <- 1; Q <- 1;
finalPredTable <- as.data.frame(matrix(nrow=length(thirdX), ncol = 1))
finalPropor <- as.data.frame(matrix(nrow = length(thirdX), ncol = 1))
colnames(finalPropor) <- c("F2")
colnames(finalPredTable) <- paste("a(", P, D, Q,")", "F =", Freq)

## start Asssessment loop
for(i in 1:length(thirdX))
{
  if(i==1)# get the original 60% of the observations
  {
    series<-c(firstX, secondX)
  }else{# add new observations
    series<-c(firstX, secondX, thirdX[1:(i-1)])
  }
  Ts<-length(series)
  I<-abs(fft(series))^2/Ts
  if(Ts%%2==0)#if n is even
  {
    f<-1:(Ts/2-1)/Ts
    P<-(4/Ts)*I[2:(Ts/2)]
  }else{#if n is odd
    f<-1:{(Ts-1)/2}/Ts
    P<-(4/Ts)*I[2:{(Ts+1)/2}]
  }
  varseries<-var(series)*(1-1/Ts)
  freq <- f[order(P, decreasing = TRUE)[1:j]]
  regMatrix <- matrix(ncol = length(freq)*2, nrow = Ts+1)
  for (l in 1:j){
    regMatrix[,{2*l}-1] <-cos(2*pi* {1:(Ts+1)}*freq[l])
    regMatrix[,2*l] <-sin(2*pi * {1:(Ts+1)}*freq[l])
  }
  reg <- lm(series~regMatrix[-(Ts+1),]) 
  specPred<-sum(reg$coefficients*c(1,regMatrix[Ts+1,]))
  finalPropor[i,] <-0.5*sum(reg$coefficients[-1]^2)/varseries
  ############## FIT ARIMA Model ################
  tempModel <- arima(x = reg$residuals, c(P,D,Q))
  finalPredTable[i,] <- specPred+forecast.Arima(tempModel,h=1)$mean
}
######### Select the best model based on MSE ###############
finalMSE<-numeric(dim(finalPredTable)[2])
names(finalMSE)<-colnames(finalPredTable)
finalMSE <- mean(sum((finalPredTable-thirdX)^2))
##########################Assessment
plot(coredata(thirdX))
lines(finalPredTable[,which.min(finalMSE)])



### extra stuff
          pred[[k]] <- c("Prorotion of var for", j, "frequencies", propor[j])
          pred[[k]] <- arima(x = series, p,d,q)
          
          
## determining the frequency
I<-abs(fft(data))^2/length(data)
P<-(4/length(data))*I[1:(length(data)/2)]
f<-0:(length(data)/2-1)/length(data)
plot(f[-1],P[-1],type="l")
orderP <- order(P, decreasing = TRUE)
freq <- f[orderP[2:3]]
abline(v=freq,col="red")

## detrending using spectral analysis
d <- as.numeric(data)
y <- as.ts(data)


regMatrix <- matrix(ncol = length(freq)*2, nrow = nrow(data))
for (i in 1:length(freq)){
  f1 <- cos(2*pi* {1:nrow(data)}*freq[i])
  f2 <- sin(2*pi * {1:nrow(data)}*freq[i])
  regMatrix[,{2*i}-1] <- f1
  regMatrix[,2*i] <- f2
}

reg <- lm(y~regMatrix)
plot.ts(d)
lines(fitted(reg), lwd=2, col="red")

plot(resid(reg), main = "Residuals of Regression")
abline(h = 0, col ="red" , lty = 2, lwd = 3)


reg<-lm(data~index(data))
panel_with_regression_line <- function(index, x, ...){
  default.panel(index, x, ...);m <- lm(x ~ index);abline(m, col="red4", lwd=2)}
plot.xts(cbind(sin(pi*data/6)+cos(pi*data/6),reg$residuals), 
         main = "Regression on log GDP and the corresponding residuals",
         lwd = 2, panel = panel_with_regression_line)
boxcox(reg, lambda=seq(from=-2, to=2, by=0.05), plotit=T)
reg<-lm(sqrt(data)~index(data))
plot.xts(cbind(sqrt(data),reg$residuals), 
         main = "Regression on log GDP and the corresponding residuals",
         lwd = 2, panel = panel_with_regression_line)
forecast::auto.arima(reg$residuals)
@

\end{document}